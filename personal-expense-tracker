# expense_tracker.py
import datetime

class ExpenseTracker:
    def __init__(self):
        self.expenses = []

    def add_expense(self, amount, category, date=None):
        if date is None:
            date = datetime.date.today()
        else:
            date = datetime.datetime.strptime(date, '%Y-%m-%d').date()
        expense = {
            'amount': amount,
            'category': category,
            'date': date
        }
        self.expenses.append(expense)
        print(f"Expense added: {expense}")

    def view_expenses(self):
        if not self.expenses:
            print("No expenses recorded.")
            return
        print("Date         | Category       | Amount")
        print("---------------------------------------")
        for e in self.expenses:
            print(f"{e['date']} | {e['category']:13} | {e['amount']:7}")
        total = sum(e['amount'] for e in self.expenses)
        print("---------------------------------------")
        print(f"Total expenses: {total}")

    def clear_expenses(self):
        self.expenses = []
        print("All expenses cleared.")

def main():
    tracker = ExpenseTracker()
    while True:
        print("\nOptions: add | view | clear | quit")
        choice = input("Choose an option: ").strip().lower()

        if choice == 'add':
            try:
                amount = float(input("Enter amount: "))
                category = input("Enter category: ")
                date = input("Enter date (YYYY-MM-DD) or leave empty for today: ").strip()
                date = date if date else None
                tracker.add_expense(amount, category, date)
            except ValueError:
                print("Invalid input. Please try again.")
        elif choice == 'view':
            tracker.view_expenses()
        elif choice == 'clear':
            tracker.clear_expenses()
        elif choice == 'quit':
            print("Exiting program.")
            break
        else:
            print("Invalid option. Try again.")

if __name__ == "__main__":
    main()
